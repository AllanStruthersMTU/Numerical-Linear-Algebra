(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    109488,       2160]
NotebookOptionsPosition[    107055,       2107]
NotebookOutlinePosition[    107686,       2128]
CellTagsIndexPosition[    107643,       2125]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["2.  Norms", "Title",
 CellChangeTimes->{{3.8465884180627756`*^9, 3.846588429089326*^9}, {
  3.84666883912605*^9, 3.846668864267633*^9}, {3.846670417593573*^9, 
  3.846670436952243*^9}, {3.846672726384389*^9, 
  3.8466727270705147`*^9}},ExpressionUUID->"bb443c9e-1a1c-437e-b10c-\
400e63a30bb8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "123"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "m"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"SingularValueList", "[", 
    RowBox[{"A", ",", "99"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8511759251349263`*^9, 3.851175963403627*^9}, {
  3.8511833803204727`*^9, 3.8511833899615183`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"52909568-0db6-437c-ab9c-bb870c378d58"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1y39M1HUcx/EvhAaMJsQJRIyU+O2hqKBw/LgXIB7y8w6Ou0Oi5MeRjEgd
aSUIR+GQHzYRw5BMB5cUwVBCCCS4wos22OBsSFn4hzp+J4r8iONXNd6fz/bZ
Z4/Pc6/tKcdilYYcx6X+d/9/N84zYXjqrj5emhHoAz3re57zNjMb41i1uUI6
+RLZHL1RbU42Xcw85HYOZ7xRyWyD7m3RItssZjsEX6m3uu3LvA1W/BBB2U5m
ByTMmpdcdWZ2xOjoNw23tzI74/Fd7Yn4SUOyK9ZMa35MecjsjvPtut9Ghpj5
+NTUIn/6JvNOtLjUpgoLmD1Rq04r1x9n3o28x1YfmKQz74HcT6Iu9WbeixOe
Tr4/vMzsheqZLQidNSB7o90m7+ucGeZ9SBRJqjO1zPuRf/p41mgDsw86/GvL
ZJ8x+wImufN2mcwCyN13jQ0qmP1Qn/1uHUTM/pj3LLEFjzkAwzfUH3Wsc+RA
LF5fzix7wizE+JeHx6z7mYEW/vqbwz+TVYBxjfrkvWusB6Ffrd07U8x6ELwd
HXQPjrAejObrpmaPxKwHQ6PkT5S5sB6C86sjUx481kOQOeEuaG1YF270A9hS
+IVGXEtWHYBrvTqr7izroeB7P6oxyGE9FHrdT+mLdqwfRN19JOkH1qgfhKWq
6J64lcyJYF7dMdhbwboIl+diTK2krIdBEZHyu7BulXoYYqJ1OxyukrlD4Het
eV0sYf0Q3P70iBYYsx4OB62bbOvdFerhGJFZ8HafIXMRWCgf0lT4sh6BtzWn
lhtXlqlHQhcQFLn6K1kViUbzQfnDStajcLOoPcMykfUo9BkXJBk4sh6N9ckP
FU19eurRSF9s85orIXMxUCX5OKcfZj0GE93WxQmbWBejoulCcnLn0oYhRl7i
izuOOWSVGFUWyb0x75A1YiS1dV26YUrmJPjOrLlc3P4P7SXI/0WZCf0i7SUQ
XeyM+6qTrJGg80yt5eVCMhcLu4lXuztcyYhFqfyabYsR28dCGV5tGD60QPtY
OJ6dlaz4krk4nN430zwwPU/7OJy89fStjG/Jqjjk8w2qwh7M0T4O2ZX+R1rV
ZE4KJ6Wx5o9QMqQouJ/l0zXwgvZSfD4VqC1IJGukUN4SHt3BJ3Px+ORKT2P7
2Czt4+FqMu372sdkVTzcdNbF7409p308xifdBBb2ZE6Go3qzTfbzz2gvQ/+S
ZiIhl6ySocu+sEkQSNbI4P5+3SvLUTO0l2Mh4tTm4dKntJdD27P6evOlv2kv
R4nEL7ird4r2clSJje5sTyNzCmQHtPZ7nBunvQJ+T4rS/jIgqxTICeNfGHYZ
o70Cc67fuy/tHxX+Cw7Pxbg=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.5492047825374448},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, Automatic}},
  GridLines->FrontEndValueCache[{Automatic, 
     Charting`ScaledTickValues[{Log, Exp}]}, {Automatic, {{0.6931471805599453, 
       Directive[]}, {1.6094379124341003`, 
       Directive[]}, {2.302585092994046, 
       Directive[]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 99}, {0.5492047825374448, 2.5488677858196853`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {0., 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.4054651081081644, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.70805020110221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{{3.8511759483505735`*^9, 3.851175963980921*^9}, {
  3.8511833821930265`*^9, 3.8511833906506863`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"28de6606-f29a-4496-a135-830b7553d600"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Norms", "Section",
 CellChangeTimes->{{3.8465886036957493`*^9, 3.846588613228965*^9}, {
  3.846590081767165*^9, 3.8465900846336513`*^9}, {3.8466689721145897`*^9, 
  3.84666897592218*^9}, {3.846670668239315*^9, 3.846670675127418*^9}, {
  3.846670718593*^9, 3.846670719856618*^9}, {3.846670942518662*^9, 
  3.8466709471577263`*^9}, {3.846672731263501*^9, 
  3.846672732014659*^9}},ExpressionUUID->"49b07cbf-e091-4cc1-8fb1-\
605df9082f24"],

Cell[TextData[{
 "A norm ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", 
    RowBox[{".", "||"}]}], TraditionalForm]],ExpressionUUID->
  "2f402062-ef32-43d9-aea6-256ae21bd3d0"],
 " is just a way to measure how big something (a vector or a matrix in our \
course) is.  Any norm needs to satisfy the following\n\t1) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", "x", "||", 
    RowBox[{"\[GreaterEqual]", "0"}]}], TraditionalForm]],ExpressionUUID->
  "6f4aaab0-4e8a-49f5-a81c-f8c807ee34e3"],
 "  and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", "x", "||"}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "0855a9e5-b897-41d3-8ee1-1ac923d70b4a"],
 " implies x is zero.\n\t2) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", 
    RowBox[{"x", "+", "y"}], "||", 
    RowBox[{"\[LessEqual]", 
     RowBox[{"||", "x", "||", 
      RowBox[{"+", 
       RowBox[{"||", "y", "||"}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "e81829d2-a307-4414-8d2f-250c9bd4b275"],
 "\n\t3) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", 
     RowBox[{"\[Alpha]", " ", "x"}], "||"}], "=", 
    RowBox[{"|", "\[Alpha]", "|", " ", 
     RowBox[{"||", "x", "||"}]}]}], TraditionalForm]],ExpressionUUID->
  "a09ea35f-601b-4085-b345-873afbf4e0a7"]
}], "Text",
 CellChangeTimes->{{3.846670950587816*^9, 3.846671114385092*^9}, {
  3.846672739576446*^9, 
  3.846672952066236*^9}},ExpressionUUID->"fc1fdc0d-4bcd-4768-ba05-\
a898ed38d1b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Vector Norms: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", "x", 
    SubscriptBox["||", "p"]}], TraditionalForm]],ExpressionUUID->
  "bf704ea3-d7d0-417d-9053-8bc6f37c208a"]
}], "Section",
 CellChangeTimes->{{3.8465886036957493`*^9, 3.846588613228965*^9}, {
  3.846590081767165*^9, 3.8465900846336513`*^9}, {3.8466689721145897`*^9, 
  3.84666897592218*^9}, {3.846670668239315*^9, 3.846670675127418*^9}, {
  3.846670718593*^9, 3.846670719856618*^9}, {3.846670942518662*^9, 
  3.8466709471577263`*^9}, {3.846672731263501*^9, 3.846672732014659*^9}, {
  3.846672973073262*^9, 3.8466729746107903`*^9}, {3.846673339446022*^9, 
  3.846673373115171*^9}},ExpressionUUID->"85e03183-2c31-436d-9ad4-\
6eb3ba67a3d8"],

Cell[TextData[{
 "Useful vector norms are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", "x", 
     SubsuperscriptBox["||", "p", "p"]}], "=", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "m"], 
     RowBox[{"|", 
      SubscriptBox["x", "i"], 
      SuperscriptBox["|", "p"]}]}]}], TraditionalForm]],ExpressionUUID->
  "57f54ff9-7127-4cbb-a32b-e27d496c87aa"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "\[GreaterEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "ca5b0577-f9b1-42af-b138-6dc19bfbffed"],
 ". This includes the familiar Euclidean norm ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "59f9a603-2e12-4123-9d8c-45cc95db7715"],
 ", and in the limit as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "\[Rule]", "\[Infinity]"}], TraditionalForm]],ExpressionUUID->
  "9ec7c924-3168-4ae3-918f-4964096561b2"],
 " the pessimists norm",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", "x", 
     SubscriptBox["||", "\[Infinity]"]}], "=", 
    RowBox[{
     SubscriptBox["max", "i"], "|", 
     SubscriptBox["x", "i"], "|"}]}], TraditionalForm]],ExpressionUUID->
  "2758855a-6268-41f4-8538-ac5859a5d835"],
 ". All are available in most software package.  I would hope the default is \
always the 2 norm! "
}], "Text",
 CellChangeTimes->{{3.846670950587816*^9, 3.846671114385092*^9}, {
   3.846672739576446*^9, 3.846672952066236*^9}, {3.846673331805389*^9, 
   3.846673637048849*^9}, {3.846674103884897*^9, 3.846674149440172*^9}, {
   3.851170149109926*^9, 3.851170149958971*^9}, 
   3.8511835521030035`*^9},ExpressionUUID->"0cb79447-ed42-4fe7-a3e0-\
ed1ad8592ecf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", " ", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2"}], "}"}], ",", "1"}], "]"}], "==", "1"}], 
     ",", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2"}], "}"}], ",", "2"}], "]"}], "==", "1"}], 
     ",", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2"}], "}"}], ",", "p"}], "]"}], "==", "1"}], 
     ",", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2"}], "}"}], ",", "\[Infinity]"}], "]"}], "==", 
      "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "p", ",", "\[Infinity]"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8466736440127783`*^9, 3.846673828687298*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0df46755-caa5-4ac2-b4ff-342564161e14"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJztnPufz9X2x6WQ6EjK9eRWceRa5KRkNXI6ESmFckl8ky5UcvkqRDldKMp8
001unRKOIpccDi0KRaOYGeQyGvcxZubjkvTtwpnPe6/n/pz3/gO+31/yy+ex
5vN5v997r71el7Xb7+r0e7xL/5IlSpQ4v1SJEsnPLz8dtOvTQf/SP7VPv6J9
eoF+8Hby33LNiP4V6F2j1nUftW6ZDr+jzLA7yhRqyT7HL+1zfKnWzk67LDut
UHOTH5ct0bXdkz8s1ElXJG+0SB/blbxxobZOXjZsoVaLrivUe5Mfly7QozP/
kD/zD0V6bXSfj3TVvoaf7WtYpC9Gz5+rAx5M/ivSovuSF3ygF+cnLyjSjOh5
7+uB5M8/K9J50fPe02gau4r0wuh+0/T+6DkJ3RDd7229pnnyX0LXR/ebohck
h3VHQp+Lrk/X3dENEjo6un6ifvzThAU/TUjo8Oj3z+sL188Zd/2chL6Ulfx+
tN4T5SWh07Yk40EaDWdfQktE/5a0/u1s8l/x99H9Bgnfn781ul662fWfRnl5
Xp61+z/kni88/ys3Ptlh43sw+v0UOc/G38XNV3rbfGe6fAj5aBP9/gMpb/lb
5vIr/S2/V7n8C/l/wK2XVLL1+rtbTxlo63mVW3+pYev/d1cvQr00jP6+SkYm
p9e9QHtE91stV0XzP6pvR/f7XHZGAzyqOdF6rpXxC5ITztfa0f3XyXXJdIzL
1z5Rnr6UvKhe8nVW9LwN8mb0eUQPRff5Wv6azNIVR/TK6Pmb5HQyfQvydECU
l29ldvJ21+dpt2g8m6VrdN/D+kY0nkxZGuXrkG6PxpMtl0TjOKhPRXW/Vb6I
6vug1oj+vlWejP5+UO+L7rNdMqPrDujMaFw75Oqo3vbrTdE8dspeVwCa6xZG
JkfP3ad1ovHmSCI5zD57tX803u/l9micuXpuVE+58mtUT9/rXe7v0tP9Tn9w
10k1dx+bzz7Z5p6jh9xzpaUbh7Z045I33DhtvgfkbjcPHeHmJRXdPPUrN28Z
7PKgVV1eZIvLk65weROH+0zt6fIqHV2e9R8u79LdrYP+4tZFLnHrpLe5dZNM
t476rltXmezWWQvcusudrg70RlcXUt7ViU5ydSNfuzrSPa6u5CVXZ9rE1Z3c
4upQx7i6lNKuTnWzq1sZa7xnvCbw3BOu7mWk8doahxPJz3K89bDDkQw03qro
cCbwVj+HS9mU5XjJeEfgITfehLQ1HlrkcC+jsxwPGe8IPNTD8Ya8lOl4qKnj
FZm+yfGQ8Y7AQ3w/bbPjIeMtKZPteMh4R+Ahnv+Qe77ssvG9ZDxkvCPwUB+b
38XGQ64eiuR+4yHjHYGHjNcNv3MlyCe8I/CQ6Yj8j/GQq8dCWeV0R6rbesFL
w5xOGb8uE9Z3nPHUaFv/GsZTxksCT1E/442nXrb62mo8Zbwk8BT12dl46m2r
33eMp4yXBJ6i/i81nppj+OhjPGW8JPDUMsNXuvEU+PvWeGqd4XOY8ZTxksBT
2Ybve4ynwP/rxlP7jR+uN556zfgDnjpu/HKZ8RT808N4qoTxE5/8nd9xHffh
vjyH5zIOxsU4z0T5+s7qdL+fB/NaHN1um9SPyvOAn/cQywN5IU+bLW/k8bro
OVnyQFSXh6zOMn3eC6JxbxGH29S6sE59bd1Yxw1RPX8jnaLf5UklW2fW/Zlo
IBkyKyqbPF8Xt1idNIlutFEcrx+xetrg64o6o+4CvfR1St1Sx9R1oMceB+AC
nICbQO89DsFl4Bc8jsH164ZzcB/4Ec8T8AY8Aq/YxK0eUrxTyngIXoKn4C14
LPBXnvfgQXgRngz8m+dVvod34eHAH3re5vnwOjwf+E9pb/6U+WWYTqAbj5i/
JT/zzf86XU/pjPljGWA6hC79YDrFerQy/13o/LcE/tzrHLq32vw9vBv4f2ln
/cEI493nTUepn6C/8LqLDneIxqPmQwq8Tje1+jwU4WCN5Tel69Qzuo8PGBiN
Y50ejPKT8gn4ho+jPK7XKdF9PG97n5GIcPqVtoto4oi8Zj4EX4JPwbfgY8A3
Pgffgw/CF+GT8E34KPgIn4Xvwofhy/Bp+DZ8HHyJz8P34QPxhfhEfCM+Er7G
Z+I78aH4UnwqvhUfC6/jc/G9+GB8MT4Z34yPhrfx2fhufDi+HJ+Ob8fHw8v4
fHw/fQB9AX0CvEsfQV9Bn0HfQR8Cz9Kn0LfQx9DX0OfAs/RB9EX0SfRNQ6yv
ftD8Cn0VvEvfRR9GXwbv0rfRx9HXLTHepe+Dd+kL6RPpG+kj6ZPVeNd41ved
9KH0pfSp9K30sfAufS597xnri+FZ+mj6avpseJX705fTp9O308fDq/T97AOY
H/f7COwrvGI8Sf4a2j4E+xYvGw+yzwHvsX4zjedMN7Wy8Zr1GwqPUR9vGW+9
YvWTZbxlvKTwlNPXfNvPWK/UY1/jqXesXt8yXjIeUniJer/CeGmu4cH8JTyk
8NI/DU/mLxW87TBeWm94NB8FDym8ZD7M9kO2K3ifbrxkvk7N5xnv7lN46YTx
iflEhW8eMF4yX+k/+Tu/4zruw315Ds9lHIyLcf7g/KXV3X4/D+a1yvlLrev8
pQZ87PNCnr6zvJHHJs5fmh6n8kzeTzl/qaWdv1S33Jt1YVT3qXXqYevGOrKu
S53fNP5OrTt18LTzm2p+09dJR6ubNOc39Zjzm76uqDPqjjqkLqnTQF99XVPn
1D04KDI9/5vTc48TcAOOwFW4P7lo0PjXGj2co7em/7J08KMFfr1nnnO65jl5
Bbqr9JS77ly0Q3WC/Nz09kKtu6HCM/3v2KZLP/rjhD6/Fvr1+/Wvf93WqUKR
pnerdPNFaVs9DzSec/jVZ2dt0cbND+bU+rzI57/jb/W1bkGRasuzPyZOZuji
t2Y/9EiDhJZ+avqK3k9v1BsadB9Q9/aEz8dP7Tc/9uwLCT1+z5Ay19Veo9Um
dshZuzShD2ceaVWvhWrzEo+uXLom4Xmlzd6Wd2fsTWjB4tevfLTffD3T+Pkn
yp5I6LMN2/RoljdN0y6rWnPTzynedJ/HtE6j6Hvh++ZLouvlN7seHWlt95/q
ni9X8/x7o/FJVRsfOsf4L3Hzk1Y2v91u/rLQ5o/ukp8WLn/SyPL3msuv16la
2Qt3DPpyq8i0crXzKxd53f/Z1qO5Wy/5xNZrn1tP+czWE58x3dZ7uauHYl13
9fDY2PU9OgzMFb3xj1uGDD/qfU3JjEtPvzH4qP557Jm04f+dK581PZ1x5RNH
9eLZ2W0ajsz1On7qnI+XrKq7T95+Pq9XWu98rTfsgzdLTd7nfQE+q223eypv
e+uIni1TvsSiZftldZ+X1pVtcUSP/3iy29GuB7zv2FUvR79veVBWdJn6XrlT
h73Pe6b6w7L7L4f12xvGPDh95iH52n3qc+7v3vd85q6T7e4+3mcWuOfoWvdc
+dmNQ//ixuV9F762lpuHvuvmJcfcPPWRLXtX1kzPl5si2trrfXXN71qe7jYy
V9e4PMnVLm9ayuXR+8LVLs8y0OVdO7h1kPmG0xlunbwPXe3WUbYaTm2dpZnh
1HDpfW+aq5PivjCqG9/HjDDcNnV1JvUNt51cHXrfvcjVqWQbblu7OpafRjjc
Wp37PsFwKvsNt9c4nMhEw63h1PdBhlNZaLg1HMp5DpeG12O+r+T79w23XF/C
cMv9wa3hVFYabhnfD2584NTvA1xv8zNekgU2/xOG29ssP+DWeE6aGG7J7zDD
7U2W/6qG2/+19QG3H9v6pRlujXdlt+F2mq0/uDXelsWG239Z/Qw33BpO/f7R
aqu/aw231Gd5w+1Uq+eThtsqx7M7z3/jiN8/+tzw8ZvhFPwUGk5XGr52GE7H
GP7A6SbDJ5/8nd9xHffhvjyH5zKOgD+ktvELOGUezMv1oXvlIcNpLYdLnwfy
Qp78vtvMkVdMHpzKK3km76wD68I6sW6sI+vKOrPu1AF1QZ1QN9QRdUWdUXfU
IXVJnVK31DF1/Y9OOc1XFNf57ZXTK8pz6/z+DjgAFyvj+uZxBK7AGbh7P66f
EuirxzHfL4zrswT67XkC3tgf13+50Y3f7w/BO8wPXoKn4C14DF6D5+A9eBBe
JP/wJjwa+B/Pu/AwvAxPw9vwOLwOz8P76AC6UNvqD91AR8o53HqdQYfQJXSr
huEYXUPn0D3whS6ik+gmOoquorPoLjhGl9FpdBsdR9fReeMX7wPwCfgGfAS+
Ap+B7zBcel+CT8G34GPwNfgccIoPwhfhk/BN+Chwis/Cd+HD8GX4NHwbPg6c
4vPwffhAfKHVrfeN9OvLDaf4SnwmvhMfii8Fp/hWfCy+Fp+L7w301PtkfDM+
Gl8NTvHd+HB8OT6d8X9oOGV+4BSfj++nD6AvIH/glD6CvoL803cYb6rxqO9L
wCl9C30MfQ19Dn0POKUvok9ab/XVz3BquPT9s+mGtjCcBvWrpkNquuT7QPPF
+E3fT5vO6a+GW/B0zHBrOqmmm+DU98sZhlc+Azz767gP9+U5PJdxMK7qhlvm
wbyYJ/MmD+SFPJnv9Xkkr2E/urFR/w5Lvi7SOnOveq/Z5EN+vae33rCoUYc8
PVnjo+ZPVCyuh7XNHqs6JU/n3Tspc+p5RX78/Q5fdfH8LYXa5YWF768pe0Sf
6ZretEnVQn2nQXbHkj3y/f7TsvHlqlbWfB1Re+KDzaTAj7/W3l07X9mV+uTv
/I7ruA/35Tms7/H2YzNfuCU1DsbFOBk382BezJN5kwfywnpurvb9sT4ni3Ru
7aHXbjt2QP9UZ+70Rxsl/D5LyfFnRlW6OaGJnOvaHyte35ETr86eUYy7RgMu
/GZCu/26eO3CS2Y9lfDrK81ODuw2qhiH7TvU7rxin8dx/8Vlu8wv2KtZk1br
i39PKH3OlgeHP/7rBwkd07xd14JP9+rj+6q/22BOwq/39sK+bcqvTWjlmS8M
zVq9R3t1/+cFg7cmdNVFjS+4aHyOzu87oWy/3QmPu/LVN56jhxM6qecX344Y
sUN/yb1k6uOJhK49sbyw257tun5tqaXpJxMe13s7Lypf+aeE3lzq007VK2Xr
8r4ZrQuKeey2ldN/ONw5U2u32Hr79F8TnkcWfV/rbK0zCb0nd3yVSTdu0ovO
TX+mqDheMPzOz36ZukGXnZ85fMDZFE8NbFBny+rieOeMp8t8cuvnmnVfx8v2
F8eL2kw/27DtKp375JJzT51N8eKY1pNLnymOe4zTJhvTPtJTO6v0Te7TVkxc
NGpr2jS98sWyp/5z3xYe/sR9L3w/z10vXA+vc/+d7vnC84vc+ITxoSOM/ws3
P2F+A938hfmjU+Snq8ufkL9OLr9CftFF8v+NWx9hfd5y6yesH7pbztb3S7f+
wvrXdvUh1Ae6XpBXoXGVLxI6ztWXUF8Pu3oU6hEfMePg0A0Vn07oI4WfDNlT
7DuOvzvvzMTiev/Y4UPqGz7wLd8Yfi53+JKvDF/vOvx5nW/q8CnHDZ/4pjmG
314O39LL8E0fUmT4f9fxg4wyfjD+8P8dY/7537Tqc/lReadm44bDnivwvm64
8c3ljocEPjIe8j5pmrtOPnT38f/d8BPjqbHuufKW8dQJNy6/H9PTjVt6G0/N
dfPyPs54SRoYT+GLJxtPGS9JTeMp4yXvI+u5vIutg55w6yL93DrpTLdu3rfa
ukpf4x1bd7E6UKsL75N7u7qRPxjPWF3JOuMZ4xXvw60u5QXjGatbyTCesbr2
Pt/qXm4wnjFcyF3GM4Yb31cYruRW4xnDnajxzKMOl75vMdzKRuMZw7VkGs8Y
7n2fZLwg1Y1njDdksvFMuF/C91cfczzD9Y8Yz3B/eIbn/2w8w/j2GM8wfniG
+WUZzzD/XsYz5AeeIX+9jWfI71+MZ8g/PMP6bDOeYf1eM54prHjRwCp5Cd+H
N7jzg7IHDiRk04D3Xp1YZ7eUq1pt94U5Cbn4/Qr9//lijjyakd6lz46EfBHV
8R65peate14srp8jjWfXOGfNHvmv0yt3nvoyIe+df/OVF1yXK6Zjfl/g8DX1
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
8tC3h74+9P1hXxD2DWFfEfYdYV9C3/JvGe8pnw==
      "], {{{}, {}, 
        TagBox[
         TooltipBox[{
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1FV0EAQYBeCNUaMZo3PUgu5mdIOklEhJiXRJd4eSSiPdUgoqIB0qDQJS
SoNSEkrz7fDw3f/9nnP/sDbd6ncNDAgIqClibiyCiE0c4hKP+ASTgIQkIjFJ
SEoykhNCCkJJSSpSk4a0pCM9GchIJjKThTCyko3s5CAn4UQQSRS5yE0e8pKP
/BSgIIUoTBGKUozilKAkpShNGcoSTTnKU4GKVKIyVahKNapTI6YralGbOnxA
XepRnwY0pBEf0pgmNKUZzfmIFnxMS1rRmja05RPa0Z4OdKQTn9KZz+hCV7rR
nR70pBe96UNf+vE5/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpfMGX
TGUa05nBTGbxFV8zmznMZR7zWcBCFvENi1nCUpaxnBWsZBWrWcNa1rGeb9nA
RjaxmS18x/dsZRs/8CM/sZ0d7ORndrGbPexlH/s5wEEOcZhf+JXfOMJRjnGc
E5zkFKc5w++c5Rzn+YMLXOQSl7nCn/zFVa5xnRvc5Ba3ucNd/uYf7nGfBzzk
Ef/ymCc85Rn/8T/PecFLXvGaN7wlZvyBxCKI2MQhLvGITzAJSEgiEpOEpCQj
OSGkIJSUpCI1aUhLOtKTgYxkIjNZCCMr2chODnISTgSRRJGL3OQhL/nITwEK
UojCFKEoxShOCUpSitKUoSzRlKM8FahIJSpThapUozo1At//ync1g4zu
            "]]}, 
          RowBox[{
            RowBox[{
              RowBox[{"Abs", "[", 
                TagBox["x1", HoldForm], "]"}], "+", 
              RowBox[{"Abs", "[", 
                TagBox["x2", HoldForm], "]"}]}], "\[Equal]", "1"}]], 
         Annotation[#, Abs[
             HoldForm[$CellContext`x1]] + Abs[
             HoldForm[$CellContext`x2]] == 1, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwVzlN7kAEAQOFvy9yya8t2/yIubbllLtu2uWzbtm3byzbeLt7nOZcnMjYu
qn1IEAQJVBSVqEwVqlKNKKpTg5rUojbRxFCHutSjPg1oSCMaE0sTmtKM5rSg
Ja1oTRva0o7/Q3F0oCOd6EwXutKN7vSgJ73oTR/60o/+DGAggxjMEIYyjOGM
YCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAm8cxiNnOYyzzms4CFLGIxS1jKMpaz
gpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc4jBHOMoxjnOC
k5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzziMU94yjOe84IE
XvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S9BaBCEEEoiEpOEpCQjOSlI
SSpSk4a0hBFOOtKTgYxkIjNZyEo2spODnOQiN3mIIJK85CM/BShIIQpThKIU
ozglKEkpSlOGspSjPBX4ByZHfbM=
            "]]}, 
          RowBox[{
            SqrtBox[
             RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                  TagBox["x1", HoldForm], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                  TagBox["x2", HoldForm], "]"}], "2"]}]], "\[Equal]", "1"}]], 
         Annotation[#, (Abs[
               HoldForm[$CellContext`x1]]^2 + Abs[
               HoldForm[$CellContext`x2]]^2)^Rational[1, 2] == 1, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwNxGOAFgYAANAvLKzlWrZt4/JdrsvGslct29iqLdvesu1att1yy/b78V6K
ph1DO4QJBAIZlTdsIJCP/BSgIIUoTBGKEkQxilOCkpSiNGUIJoSylKM8FahI
JSpThaqEUo3q1KAmtahNHepSj/o0oCGNaEwTmvILzWhOC1rSita0oS3taE8H
OtKJX+lMF7ryG93oTg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0fzOH4xh
LOP4k78YzwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzt/8wwpW
sorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEOcoh/OcwRjnKM45zg
JKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d/uMu97jPAx7yiMc84X+e8ozn
vOAlr3jNG97yjvd84COf+MwXvvKNQLhAIAxhCUd4fiACEYlEZH4kCj8RlWhE
JwYxiUVs4hCXn4lHfBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclG
dnKQk1zkJg95yUd+ClCQQhSmCEUJohjFKUFJSlGaMgQTQlnKUZ4KVKQSlalC
VUKpRnVqUJNa1KYOdalHfRrQkEZ8B90fkEw=
            "]]}, 
          RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                    TagBox["x1", HoldForm], "]"}], "5"], "+", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                    TagBox["x2", HoldForm], "]"}], "5"]}], ")"}], 
             RowBox[{"1", "/", "5"}]], "\[Equal]", "1"}]], Annotation[#, (Abs[
               HoldForm[$CellContext`x1]]^5 + Abs[
               HoldForm[$CellContext`x2]]^5)^Rational[1, 5] == 1, "Tooltip"]& 
         ], 
        TagBox[
         TooltipBox[{
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwNwwVSAkAAAMBzfIlf4gWKmCjYgWJggt2FrShid+fH3J3ZimgykigLIcSs
LA+hyqjVxqyx1jrrbbDRuE02mzBpi6222W6HnXbZbY+9puyz37QDDjrksBlH
HHXMcSecNGvOKaedcdY5511w0SWXXXHVNdfdcNMt826746577nvgoUceW/DE
U4ueWfLcCy+98tobb73z3gcfffLZF199890PP/3y2x9//fMfCkk8Gg==
            "]], 
           LineBox[CompressedData["
1:eJwNw+U6HmAAAND341Nj2nT3zHTOVbgEF8Bv96ebhWFiurs2ec7znPKBof7B
SAhh2JHYEEYdc9wJJ51y2hlnnXPeBRdd8rs//Okvl/3tiquu+cd1N9x0y79u
u+Oue+574KFHHnviqWeee+GlV15746133vvgo//875PPvvjqmyEaQsQYY40a
Z7wJJprkB5NN8aOpppluhplmmW2On8w1z3wLLLTIYksstcxyK6y0ymprrLXO
ej/b4Bcb/WqTzbbYapvtdthpl9322Os3+3wHcUc/1Q==
            "]], 
           LineBox[CompressedData["
1:eJwNwwVSAkAAAMBzxo/wEBW7C1tRFBMD7EKxu7tb/+nuzEaSmVg6L4SQsiA/
hEKLjFpsiaWWWW6FlVZZbY211llvg4022WzMFltts90OO+2y2x7j9tpnwn4H
TDrokMOOOOqYKcedcNIp02acdsZZ55x3wUWXXHbFVbOuuW7ODTfdctsdd91z
3wMPPfLYE08989wLL73y2htvvfPeBx998tkXX33z3Q8//fLbH3/98x9mRDIa

            "]], 
           LineBox[CompressedData["
1:eJwNw1VSAlAAAMCHgHoNr+QR9F9uZbfYBdjdqKDY3V2o7M5sVU2iui4SQqi1
PhZCg4022WyLrbbZboeddtltj0l77bPfAQcdctgRRx1z3JRpM0446ZTTzjjr
nPMuuOiSy6646prrbrjpllm33XHXnHn33LfggYceeeyJp5557oWXXnntjbfe
ee+Djz757Iuvvvnuh59++e2PRX/9898QDyFimVFjxi23wkpL2SFN0Q==
            "]]}, 
          RowBox[{
            RowBox[{"Max", "[", 
              RowBox[{
                RowBox[{"Abs", "[", 
                  TagBox["x1", HoldForm], "]"}], ",", 
                RowBox[{"Abs", "[", 
                  TagBox["x2", HoldForm], "]"}]}], "]"}], "\[Equal]", "1"}]], 
         Annotation[#, Max[
            Abs[
             HoldForm[$CellContext`x1]], 
            Abs[
             HoldForm[$CellContext`x2]]] == 1, "Tooltip"]& ]}}], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, AxesLabel -> {None, None}, 
     FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> Identity, 
     AspectRatio -> 1, AxesLabel -> {None, None}, DisplayFunction :> Identity,
      Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"1", "2", "5", "\[Infinity]"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.846673707584724*^9, {3.846673745863834*^9, 3.846673829350389*^9}, 
   3.8511769104480085`*^9, 3.8511838304719486`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"891477c4-8717-4ee9-ab9c-2e03326749d3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Matrix Norms: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", "A", "||"}], TraditionalForm]],ExpressionUUID->
  "d2a43f8e-4a09-4ff5-b8b2-973adc5c1593"]
}], "Section",
 CellChangeTimes->{{3.8465886036957493`*^9, 3.846588613228965*^9}, {
  3.846590081767165*^9, 3.8465900846336513`*^9}, {3.8466689721145897`*^9, 
  3.84666897592218*^9}, {3.846670668239315*^9, 3.846670675127418*^9}, {
  3.846670718593*^9, 3.846670719856618*^9}, {3.846670942518662*^9, 
  3.8466709471577263`*^9}, {3.846672731263501*^9, 3.846672732014659*^9}, {
  3.846672973073262*^9, 3.8466729746107903`*^9}, {3.846673339446022*^9, 
  3.846673373115171*^9}, {3.846674204161969*^9, 
  3.8466742112260303`*^9}},ExpressionUUID->"23fcbe3f-92c6-4088-9271-\
eb8089ec3d8c"],

Cell[TextData[{
 "There are lots of useful norms for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalC]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "e22f25bf-c63c-4ef9-b380-77e2d20bb220"],
 "! Different packages have different defaults! You should always check what \
you are computing!"
}], "Text",
 CellChangeTimes->{{3.846670950587816*^9, 3.846671114385092*^9}, {
  3.846672739576446*^9, 3.846672952066236*^9}, {3.846673331805389*^9, 
  3.846673637048849*^9}, {3.846674103884897*^9, 3.846674149440172*^9}, {
  3.846674217184688*^9, 3.846674313215798*^9}, {3.8466756001145077`*^9, 
  3.846675617299246*^9}},ExpressionUUID->"1f88b5d7-96b5-4d48-96e1-\
d1245ecec13f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Frobenius Norm: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", "A", 
    SubscriptBox["||", "F"]}], TraditionalForm]],ExpressionUUID->
  "b91bdc9a-2a83-4c2b-980a-717f78e02acf"]
}], "Subsection",
 CellChangeTimes->{{3.846674717272637*^9, 
  3.8466747567003937`*^9}},ExpressionUUID->"33add211-9707-45ef-8e4a-\
b2e6496835ae"],

Cell[TextData[{
 "One useful norm is the Hilbert-Schmidt or Frobenius norm \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", "A", 
     SubsuperscriptBox["||", "F", "2"]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "m"], 
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"]}], "|", 
      SubscriptBox["A", 
       RowBox[{"i", ",", "j"}]], 
      SuperscriptBox["|", "2"]}], "=", 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{"||", 
       SubscriptBox["a", "j"], 
       SubsuperscriptBox["||", "2", "2"]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"19ff05f4-542b-43db-8933-adf71b76ee4e"],
 " "
}], "Text",
 CellChangeTimes->{{3.846670950587816*^9, 3.846671114385092*^9}, {
  3.846672739576446*^9, 3.846672952066236*^9}, {3.846673331805389*^9, 
  3.846673637048849*^9}, {3.846674103884897*^9, 3.846674149440172*^9}, {
  3.846674217184688*^9, 3.846674313215798*^9}, {3.846674423176779*^9, 
  3.8466745798846207`*^9}},ExpressionUUID->"6271584b-9fbd-431e-89eb-\
cfa57d03b4f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Induced Vector Norms: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", "A", 
    SubscriptBox["||", "p"]}], TraditionalForm]],ExpressionUUID->
  "3072100f-927e-4218-84f5-a5cb75172489"]
}], "Subsection",
 CellChangeTimes->{{3.846674717272637*^9, 3.8466747567003937`*^9}, {
  3.846674788259172*^9, 
  3.8466748089971733`*^9}},ExpressionUUID->"8ac42d43-fbcf-448c-85c4-\
88c81cb86752"],

Cell[TextData[{
 "Each vector p-norm defines (fancy word induces) a norm for matrices ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalC]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "0f426542-ef47-4ef8-a2d1-5a0bab6e7184"],
 " via \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", "A", 
     SubscriptBox["||", 
      RowBox[{"(", 
       RowBox[{"m", ",", "n"}], ")"}]]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["max", 
       RowBox[{"x", "\[NotEqual]", "0"}]], 
      FractionBox[
       RowBox[{"||", 
        RowBox[{"A", ".", "x"}], 
        SubscriptBox["||", 
         RowBox[{"(", "m", ")"}]]}], 
       RowBox[{"||", "x", 
        SubscriptBox["||", 
         RowBox[{"(", "n", ")"}]]}]]}], "=", 
     RowBox[{
      SubscriptBox["max", 
       RowBox[{
        RowBox[{"||", "x", 
         SubscriptBox["||", 
          RowBox[{"(", "n", ")"}]]}], "=", "1"}]], "||", 
      RowBox[{"A", ".", "x"}], 
      SubscriptBox["||", 
       RowBox[{"(", "m", ")"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "b156be6a-0fce-4f87-816d-2a8c25565373"],
 "\nThe matrix norm induced by the two norm is the most common of these. It \
is the default in Mathematica.  "
}], "Text",
 CellChangeTimes->{{3.846670950587816*^9, 3.846671114385092*^9}, {
  3.846672739576446*^9, 3.846672952066236*^9}, {3.846673331805389*^9, 
  3.846673637048849*^9}, {3.846674103884897*^9, 3.846674149440172*^9}, {
  3.846674217184688*^9, 3.846674313215798*^9}, {3.846674423176779*^9, 
  3.8466745798846207`*^9}, {3.846674813865264*^9, 3.8466751259945107`*^9}, {
  3.84667516729842*^9, 3.846675191707109*^9}, {3.8466754630024548`*^9, 
  3.846675472827169*^9}},ExpressionUUID->"153b1fec-bf19-43de-a522-\
48f10ca2c160"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Norm", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
     RowBox[{"s", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], ",", 
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"s", ",", "A"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8466752787450743`*^9, 3.846675494788719*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"89bfbf29-aa62-419d-81be-b6b1af592f59"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
OhOxOuTJNGryPaAr/xtFVy9vfl7JaVz7YY9i5f0x3DAewXWe9ANG8gxNXYqC
nxxDVZt9aGizk5d18iwF61NeG2u505BXo9DKWpGCdb91dl5/TEOX9uCbzvco
uG/FTdoqZRp2CVSP6AVR8LGNXNNFFhoueG48cv43BdN/Grmf16WiYqvULu3C
cdyiuF5Q6joVW9uk5TRrxzFxTqxIWIGKr9TjHRQ6x1E1S/h2nzQVz6gfltxO
jKPd5bHTKzmouFnonIj7jglk3IXb61Om0IhDdZ3U6wl085stl5ydRFvLtm0z
ypN45MJ1hysTk3h6O4vZ9tuT2OEUmHu7dxIpX2XvqT2YxEWb4/lmZZOoFnPs
eKTTJH5mk1e97DuJm87qbp1Jm8TbXcFfqw5OYlKc+LAy3xQGaX4y4DeawKBj
K76I1U1hvdHU3+PaEyhe0exV1z6FSjlX1LRVJ9ApxNbp/tAURjiLi/sfn0Cp
VmrSux9TKCXWQSvjnMD7F9e0Bm8lPW7PZgOxhHH0yZzd4GlBRa7pur2iFAru
ZAtPoaylYeVeG8tPXRQMrbOdrBSmodJcTMvuegrK5/BPR+2mYXcrZVQog4Jy
6UlysidoGDfbGVfmSMFvaknsoEvDnbX2TyQ3UdBnqPodZyoNeVS9T7kqjCH1
1PKt9vPTeH6TzNOsM2M4kVdlVagwjWclQrWHD5H+biunEKE+je3uTYf2CY2h
b9WPg8qG02iV7a3hRRlFv5HrYfdeT+NzAY6Tbs9H0ZZvTlT/6zSaa7Yc1UkY
wbd6Yqm+12bwzAvHT1xhI9gso12WemsGW8Ue78h8O4LCf6I0KvRn0Gk1VXXe
agQ7Qz9+67OaQRb7lb1KZ0ZwHnbVFfrNYIuyVcWrj8O4NSDr+oXWGUxX2V9R
Rx/EuHH+pevyZB8PdNV3NQ2iYEBD2mk1Or4/fdmuP30QTXaL2AjfpOO8M/f3
hseDeJ+j4nCZER35FXMPKSwNoBVnr3iqOx1V9GqUK1YPYL+vscTKSjpeaLoQ
S9nWh46nrVfGyzBwxbiBwM9/vegy0vfd8wyDnPPSp1hHe9GSkZVuJMfA00+9
ulljetFbhydo9TXyOutlmVSxXqxh29VGNWVg5pv3+7MP9GD2kehHwuTcov4t
ulEq3YUXdI3fy7Ez0TvHtlVYsAuV+tv6CzmZGFulQrVc6EQixLFxPy8TJwql
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
/g9FomeM
       "]]},
     Annotation[#, "Charting`Private`Tag$10437#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
rSIWx5RvEfRpFORXM/U7YxXVtJfqFrDNoJwRJbQlchX378LkaakZdOjQ0G1F
h1WU8bOie5v5DGqTV5WW3LuKMrtsKl/VzqDRwth7S/4r6Hqdw7mCr7OIUDD3
qHq9gopoFK0TP2ZR5dPLq59erCBd/YeSdSWziEt93ZKwzQritJbsr+yZRfzc
2p+6yBW0tik433Ur7nFCz76KjC2jGA0uVQbnOcSufKG7glxGO2ZnEzmM51G+
64Blj+IyWtA5EM5iPo+6w6OeTEkuoyHfSPW12/Po6dZzF5Y4l1FuCP1Yrec8
+nWZuJXUtYR8n5nbyxTMo7P6OYW5L5YQx3PJhHjc88627KTe/76I6i336aYw
LyLF+ZP94TGL6AZYm7RyL6Lxc/s3VgYtovOcb98s7VxEeiO5ZutfLiLxaz23
dqkvoqF3Bgm79RfRaqyz0+7buNflhSyK9y8gjd0muQONi0jy9jY/TvYFFED4
qLGHLKF1mQ9zDCj46/AWvYxdQtKsRcrus/PogKbW6GTaEsqoaxMbbZtHqgY6
0j8qlhA8LQDb6HlktXU3nb64hIZV/6hfhnlk3ynlesZoGR0IYpqUsZ1DzhU9
DduJFdR1kEUx5+IckujiqUcbV5CnYaXskZNzKGHIfefFLStI7lzfaT2lORR3
6WeI8+4VdGl2rISbPosiAnf/cTBeQSh0n0yC3yxa7/9ZZl/0ChrfEZ67NXUG
CRgdVrbTWUUPGjfaHI+cQUwrbL0bDVcR6+sk62cfZtDsOcOGoHOr6Hlp272K
ZzPoQb38s9ibq8h+fmSD4qEZpOC7IcguYBWpuwZI7W6YRr+0eWTzOrC5j4bl
TU6hiW9f9ffeXENN5VU613qmUOZLJq3xB/gcLxZ9ZW6YQuJblBXDX6yhk5I/
8tUyppDxyZZNi2/WUJho6Is7z6dQTnTA6RMpayjzsoTqFpYpdO7s0vOIuTVU
4bmH4cKOSXT15tdjCw9piP+/GUN1tkk0s143/4kDDU1qZhyRWZ5A3e77E2fc
aMh5/sQP+6wJ1F7p01P1kYZ23OcwSd0/gSYUjt/c/oOGfrYVXHDYO45W7Xk2
bVuhoUGVHcV1wn/R8VSbdJ+HdMTZPOvoTPxFbDmM3ivP6cjbgXZV5s8o+sOe
7H/ZlY7cwuhV14JHkZDZqgjbWzo61/xRyoF3FNXWbRSkJdER98juA0fwnKpJ
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
SyjwYL/vas8CuN3SWVppxn1N9/i2rPBF6FI64NC9dRFVNe7k9k9aBBOllicZ
rIvo3MBDxqs/F8E8buTTK9oC6ltmQ9NNi/AxweEyZ98Cunp5l2w2yxK0rvJf
qEtYQA587pWzN5dA4tj0Q25t3PPiVdWm5ZfBOnlIKfLaPDrnb6zSq7EMEVkm
N6JN55FvJOvPyqPLoMK753C43jxa9+3ncfcryyAmzDTuJjuPIqzSxGPeLMO3
9mgvpvk5FJ28ueXJ32UgnV+6NuI+PB5TqH7mywpc/3WV6P80i55cvLv3Q9wK
PD7AZyPoPYsuxn3Sq01bAWF/1ywjh1l0IkijUb5sBWwT9fi+Wsyi26842T5P
rUCMd4KsiMwsMlFTaJbQXIUi/u91gjkzKPLhtpS5tlWwsqRcvtcyjWDemP1M
3yocrhdV5yifRlnT4gcTx1ZBT5C4GZ09jVzNdDiOE2vQuKLUVRYyjR5zjCnL
7VoDbUEm6+ar02iT0eHPgTfX4BO7mfRW3PNEpsvlJxbXoG9FZ1B33RTiv5Uh
qE6hQcdV4Z/hs5No/5efvQ4sNDiSp+y21D+Jc7Ti6Mw2GhiGbGEOLJ1E3amL
ma5qNLgY3s4Z4z2JFsUGQvSf0iDRxOI2C98kMh27ed1qlgbftv026Dsxjubo
J90qVmjwJVAzN0xuHEkFO2tJrKNDKW/C4lmucXRHpd65lIsOGqGu4ykNY6j8
hhklRZYOTv9NxXCcH0MFEspWQtfpoN5omvb02l80826/lmkdHXg9bpvqPR5B
Dhcl7Uxa6RAb/rDY88wIEnmxkHyiiw5E3JfqIsURdHrgiqHQOP77fQ3rRaeG
kQrjf3fiGQmS/uRI5mvrYZQXKF29UYggo60Ej9JMh1Dw1M3L5icJsifSKrx9
7wCa6DRlMTxFkDsrgzu0OAeQmMilHepnCNLvrmF/+Fg/Mkq/50i5QJBVRaIu
p2L6kUqklIDJdYJsiRfmtNnRj7i6VJbEnhPkWFrKX3vmPrRxgxHLkUiC7HsZ
ee1FQzc6bOV3+nE0Qf7XuO67T2o3cpXkexMVS5CWj/kSP/l3I49vDSXz3wjS
531wceTJbmTddV3zWjpBXiU2WrpXdiHfj+k9jsUEOXLAoI/f7Q+S6PMsultK
kCyvH3pkHvqDepg+eF8qJ0i+iR4PfYY/qDPjZoV0NUHOl7i2WzzvRPJv9ky9
bSRIdy8lZyW7DnSIsdwxtJcg+dulZZwvtiPq/WTHk/0EeSWfypfA344id6NL
KwMESW4wNq9rbkN8NV9TD43g5zf7c3q9URuScYv8HjlJkLvlix3FjrSiT1br
Cr+sEqTXcKmG2p5mJM31/hEbjSBtN3UUMYw0oS/CWuse0gnSplYnrSiqCTUU
vwpVY6CQAdPDDOo7m5CH3MVJv/UUMshMUrF/cyO6x3nrzWMuCvmef73hkYU6
dLxYgaFoM4W83+b/qzu+DuWU95CbeCjkQOSFz4+u1KG/lg47PXkppHpB0Ev/
slo0rS94SW87hWTsQQtuQTWoqyxn100BCnnATuL+okEN0ttlku6xg0LGJ7Ut
WDDWoMBZMYV0IQq52ODXY9pWjb5pMbpUi1LITmtZC9bnlejVxGmPEjEKyXrn
aHtofwVqKeIzyd5FIbvpTXVy+hWo9WShVoAEhRSpm1ncK1SOGAoZzzNKU0jh
gl2y7dQSdOIZp3c99sSWioS9UiWoxvua82cZCum6eH2ns18x6pZYyxaWpZCX
Nj94w2FehDrJ52dG5SnkqEVJfDtDARrIfBLhq0Ah/fwYC+g2+cijhvguv5dC
ljAcOSBYn4cEz4wJmO2jkOuqadzHwqloM23Obgqbo5K96iwrFZVn/fKyV6SQ
K/diDpUM5KJSO/11zkoUcqH/5fe6VznI+X74FRq2ash2pYoz2YjiI+VwX5lC
shxIvpwt/gN5RarRT+7HP99dLyVdijMQw52XVzKwT/3hd7z4Ph0J/b3/8t+/
q7STsp2Tu/Yd6Uv1r6/AvijJ9DWPKRUxvpSxFVClkL68P6OcGpNRVnayjxV2
yK8NezUikxBz2MV7idhZH3VO9w4nIJ5P/LxT2DOi79sOuX9FYWENT/aoUUjj
3U+/fZaMQxzGTz5fxc5Ts3MbL4lGpl0Lju+xDxmvE1G5HolEuTXFCrCvxico
P2MOR4WGOm64x5E3bq+8yIz8giCIFrtJnULySfZadbsHo6OvL3hJYfcqKQnr
ln5ABsdMZTWxFVMYPsUyB6BnSSNvTmGbTxZ7bfDwQkk72JNx7yI79Xv2fmd2
Rr7+uX5W2La/+bdlMtuh////cktxZk7cDAU5/wMEAZuQ
       "]]},
     Annotation[#, "Charting`Private`Tag$10437#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
gMtgg8L/+3+f/wMjaqgJ
       "]]},
     Annotation[#, "Charting`Private`Tag$10437#3"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotLabel->FormBox[
    RowBox[{"{", 
      RowBox[{"2.1540130523981675`", ",", 
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"-", "1.131988380160987`"}], 
             RowBox[{"-", "1.7410426503406748`"}]}, {"1.3084435630631912`", 
             RowBox[{"-", "0.2971447450525453`"}]}}, RowSpacings -> 1, 
           ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
           Center], "\[NoBreak]", ")"}]}], "}"}], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.846675346451775*^9, 3.846675357816584*^9}, {
   3.846675396111821*^9, 3.846675495236462*^9}, 3.8511775136009893`*^9, 
   3.8511776475021596`*^9, 3.851184560427518*^9, 3.8511846225470495`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"4a47f661-d327-4aee-92be-09f3bc3903d2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1141.2, 525.},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association[
 "PresenterSettings" -> Association["Dialogs" -> {}], "TryRealOnly" -> False],
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->FrontEnd`FileName[{"PresenterTools"}, "Aqua.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"277c535f-1c4e-4214-85df-911c7659c621"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 299, 5, 184, "Title",ExpressionUUID->"bb443c9e-1a1c-437e-b10c-400e63a30bb8"],
Cell[CellGroupData[{
Cell[904, 31, 758, 19, 128, "Input",ExpressionUUID->"52909568-0db6-437c-ab9c-bb870c378d58"],
Cell[1665, 52, 4479, 100, 363, "Output",ExpressionUUID->"28de6606-f29a-4496-a135-830b7553d600"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6181, 157, 442, 7, 97, "Section",ExpressionUUID->"49b07cbf-e091-4cc1-8fb1-605df9082f24"],
Cell[6626, 166, 1429, 43, 185, "Text",ExpressionUUID->"fc1fdc0d-4bcd-4768-ba05-a898ed38d1b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8092, 214, 721, 15, 101, "Section",ExpressionUUID->"85e03183-2c31-436d-9ad4-6eb3ba67a3d8"],
Cell[8816, 231, 1678, 47, 121, "Text",ExpressionUUID->"0cb79447-ed42-4fe7-a3e0-ed1ad8592ecf"],
Cell[CellGroupData[{
Cell[10519, 282, 1376, 42, 157, "Input",ExpressionUUID->"0df46755-caa5-4ac2-b4ff-342564161e14"],
Cell[11898, 326, 32653, 645, 554, "Output",ExpressionUUID->"891477c4-8717-4ee9-ab9c-2e03326749d3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44600, 977, 748, 15, 97, "Section",ExpressionUUID->"23fcbe3f-92c6-4088-9271-eb8089ec3d8c"],
Cell[45351, 994, 755, 16, 83, "Text",ExpressionUUID->"1f88b5d7-96b5-4d48-96e1-d1245ecec13f"],
Cell[CellGroupData[{
Cell[46131, 1014, 339, 10, 72, "Subsection",ExpressionUUID->"33add211-9707-45ef-8e4a-b2e6496835ae"],
Cell[46473, 1026, 1144, 31, 87, "Text",ExpressionUUID->"6271584b-9fbd-431e-89eb-cfa57d03b4f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47654, 1062, 396, 11, 74, "Subsection",ExpressionUUID->"8ac42d43-fbcf-448c-85c4-88c81cb86752"],
Cell[48053, 1075, 1804, 48, 165, "Text",ExpressionUUID->"153b1fec-bf19-43de-a522-48f10ca2c160"],
Cell[CellGroupData[{
Cell[49882, 1127, 1387, 39, 157, "Input",ExpressionUUID->"89bfbf29-aa62-419d-81be-b6b1af592f59"],
Cell[51272, 1168, 55731, 933, 627, "Output",ExpressionUUID->"4a47f661-d327-4aee-92be-09f3bc3903d2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

